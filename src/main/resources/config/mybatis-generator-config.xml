<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration PUBLIC
        "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <!-- 引入配置文件 -->
    <properties resource="config/mybatis-generator.properties"/>

    <!-- 指定数据连接驱动jar地址 -->
    <!-- <classPathEntry location="${generator.classPath}" /> -->

    <!-- 一个数据库一个context -->
    <context id="cocEventContext" targetRuntime="MyBatis3">
        <!-- 生成的Java文件的编码 -->
        <property name="javaFileEncoding" value="UTF-8"/>

        <!-- 插件 -->
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"/><!-- PO对象序列化 -->
        <plugin type="org.mybatis.generator.plugins.CaseInsensitiveLikePlugin"/><!-- Example中的like语法的大小写敏感 -->
        <plugin type="org.mybatis.generator.plugins.RowBoundsPlugin"/><!-- 限制条数，例如：分页数据时使用 -->
        <plugin type="org.mybatis.generator.plugins.ToStringPlugin"/><!-- PO中添加toString() -->
        <plugin type="org.mybatis.generator.plugins.RenameExampleClassPlugin"><!-- mapper中的Example字眼修改为Criteria -->
            <property name="searchString" value="Example$"/>
            <property name="replaceString" value="Criteria"/>
        </plugin>

        <!-- 注释 -->
        <commentGenerator>
            <!-- 是否取消注释，不建议启用 -->
            <!-- <property name="suppressAllComments" value="true" /> -->

            <!-- 是否生成注释代时间戳 -->
            <property name="suppressDate" value="true"/>

            <!-- 是否给PO类，生成表和字段的注释 -->
            <property name="addRemarkComments" value="true"/>
        </commentGenerator>

        <!-- 【数据库】 jdbc连接 -->
		<jdbcConnection connectionURL="${jdbc.url}" 
			driverClass="${jdbc.driverClassName}" password="${jdbc.password}" userId="${jdbc.username}">
            <!--识别主键-->
            <property name="useInformationSchema" value="true"/>
        </jdbcConnection>
        
        <!-- 类型转换 -->
        <javaTypeResolver>
            <!-- 是否使用bigDecimal， false可自动转化以下类型（Long, Integer, Short, etc.） -->
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <!-- 【PO】生成实体类地址 -->
        <javaModelGenerator targetPackage="${generator.domainPackage}" targetProject="src/main/java">
            <!-- 是否在当前路径下新加一层schema,eg：fase路径com.oop.eksp.user.model， true:com.oop.eksp.user.model.[schemaName] -->
            <!-- <property name="enableSubPackages" value="true" /> -->

            <!-- 是否针对string类型的字段在set的时候进行trim调用 -->
            <property name="trimStrings" value="true"/>

            <!-- 设置一个根对象，
                如果设置了这个根对象，那么生成的keyClass或者recordClass会继承这个类；在Table的rootClass属性中可以覆盖该选项
                注意：如果在key class或者record class中有root class相同的属性，MBG就不会重新生成这些属性了，包括：
                    1，属性名相同，类型相同，有相同的getter/setter方法；
             -->
            <property name="rootClass" value="com.cetccity.common.base.domain.BasePo"/>
        </javaModelGenerator>

        <!-- 【mapping.xml】 生成mapxml文件 -->
        <sqlMapGenerator targetPackage="${generator.mappingXmlPackage}" targetProject="src/main/resources">
            <!-- 是否在当前路径下新加一层schema,eg：fase路径com.oop.eksp.user.model， true:com.oop.eksp.user.model.[schemaName] -->
            <!-- <property name="enableSubPackages" value="true" /> -->
        </sqlMapGenerator>

        <!-- 【Mapper.java】 生成mapxml对应client，也就是接口dao -->
        <javaClientGenerator targetPackage="${generator.mapperPackage}" targetProject="src/main/java" type="XMLMAPPER">
            <!-- 是否在当前路径下新加一层schema,eg：fase路径com.oop.eksp.user.model， true:com.oop.eksp.user.model.[schemaName] -->
            <!-- <property name="enableSubPackages" value="true" /> -->
        </javaClientGenerator>

        <!-- 待生成的表：一张表一个table -->
        <table schema="1" tableName="sys_city" domainObjectName="City"
               enableCountByExample="false" selectByExampleQueryId="false"
               enableUpdateByExample="false" enableDeleteByExample="false" enableSelectByExample="false">
            <generatedKey column="id" sqlStatement="JDBC"/>
        </table>

    </context>
</generatorConfiguration>