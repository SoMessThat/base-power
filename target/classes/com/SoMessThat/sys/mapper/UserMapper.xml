<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.SoMessThat.sys.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.SoMessThat.sys.domain.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="department_code" jdbcType="VARCHAR" property="departmentCode" />
    <result column="id_card" jdbcType="VARCHAR" property="idCard" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="status" jdbcType="VARCHAR" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, account, password, name, code, department_code, id_card, phone, email, create_time, 
    update_time, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from sys_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.SoMessThat.sys.domain.User" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into sys_user (account, password, name, 
      code, department_code, id_card, 
      phone, email, create_time, 
      update_time, status)
    values (#{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{code,jdbcType=VARCHAR}, #{departmentCode,jdbcType=VARCHAR}, #{idCard,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.SoMessThat.sys.domain.User" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="account != null">
        account,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="departmentCode != null">
        department_code,
      </if>
      <if test="idCard != null">
        id_card,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="departmentCode != null">
        #{departmentCode,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null">
        #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.SoMessThat.sys.domain.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sys_user
    <set>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="departmentCode != null">
        department_code = #{departmentCode,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null">
        id_card = #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.SoMessThat.sys.domain.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sys_user
    set account = #{account,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      department_code = #{departmentCode,jdbcType=VARCHAR},
      id_card = #{idCard,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="queryUser" resultType="com.SoMessThat.sys.vo.UserVo">
    select * from sys_user aa
    <where>
	  <if test="id != null">
		and aa.id = #{id}
      </if>
	  <if test="account != null">
		and aa.account = #{account}
      </if>
	  <if test="password != null">
		and aa.password = #{password}
      </if>
	  <if test="name != null">
		and (
			aa.account LIKE CONCAT("%", #{name}, "%")
			OR aa.`name` LIKE CONCAT("%", #{name}, "%")
		)
      </if>
	  <if test="departmentCode != null">
		and aa.department_code = #{departmentCode}
      </if>
      <if test="departmentCode == null">
		and isnull(aa.department_code)
      </if>
	  <if test="idCard != null">
		and aa.id_card = #{idCard}
      </if>
	  <if test="phone != null">
		and aa.phone = #{phone}
      </if>
	  <if test="email != null">
		and aa.email = #{email}
      </if>
	  <if test="createTime != null">
		and aa.create_time = #{createTime}
      </if>
	  <if test="updateTime != null">
		and aa.update_time = #{updateTime}
      </if>
	  <if test="status != null">
		and aa.status = #{status}
      </if>
    </where>
  </select>
  
  <resultMap id="UserRoleMap" type="com.SoMessThat.sys.vo.UserVo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="department_code" jdbcType="VARCHAR" property="departmentCode" />
    <result column="id_card" jdbcType="VARCHAR" property="idCard" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="checked" jdbcType="VARCHAR" property="checked" />
  </resultMap>
  <select id="findRoleList" parameterType="java.util.Map" resultMap="UserRoleMap">
      SELECT table1.*,table2.checked FROM sys_role table1
      LEFT JOIN
      (SELECT aa.code,"checked" as checked FROM sys_role aa
      LEFT JOIN sys_relation_user_role bb ON aa.code = bb.role_code
      WHERE bb.user_code = #{code}
      ) table2 ON table1.code = table2.code
      <where>
          <if test="name != null">
              and table1.name LIKE CONCAT("%",#{name},"%")
          </if>
          and table1.status = 'ENABLED'
      </where>
  </select>
  
  <delete id="delRoleIds" parameterType="java.util.Map">
    DELETE FROM sys_relation_user_role WHERE role_code in ${roleIds} AND user_code = #{userId}
  </delete>
  
  <insert id="addRoleIds" keyColumn="id" keyProperty="id" parameterType="java.util.Map" useGeneratedKeys="true">
  	insert into sys_relation_user_role (user_code, role_code)
    values
    <foreach collection="roleIds" item="item" index="index" open="" separator="," close="">
   (#{userId},${item})
	</foreach>
  </insert>
  
  <resultMap id="PowerMap" type="my.erp.org.vo.PowerDTO">
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="icon" jdbcType="VARCHAR" property="icon" />
    <result column="jump" jdbcType="VARCHAR" property="jump" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <collection autoMapping="true" fetchType="lazy" column="{userId=user_id,pid=id}" property="list" select="selectPowerTreeByUserID">
	    <result column="title" jdbcType="VARCHAR" property="title" />
	    <result column="icon" jdbcType="VARCHAR" property="icon" />
	    <result column="jump" jdbcType="VARCHAR" property="jump" />
	    <result column="name" jdbcType="VARCHAR" property="name" />
	 </collection>
  </resultMap>
  <!--   查找权限根节点 	-->
  <select id="selectPowerRootByUserID" parameterType="java.util.Map" resultMap="PowerMap">
  		SELECT DISTINCT cp.name name,cp.content title,cp.jump,cp.icon icon,cp.id as id,${userId} as user_id FROM sys_power cp
		LEFT JOIN sys_role_power_ref crpf ON cp.id = crpf.power_id
		LEFT JOIN sys_user_role_ref curr ON crpf.role_id = curr.role_id
		WHERE curr.user_id = ${userId} AND cp.parent_id IS NULL AND soft = 'menu'
		ORDER BY `level`
  </select>
  <!--   查找权限子节点 	-->
  <select id="selectPowerTreeByUserID" parameterType="java.util.Map" resultMap="PowerMap">
		SELECT DISTINCT cp.name name,cp.content title,cp.jump,cp.icon icon,cp.id as id,${userId} as user_id FROM sys_power cp
		LEFT JOIN sys_role_power_ref crpf ON cp.id = crpf.power_id
		LEFT JOIN sys_user_role_ref curr ON crpf.role_id = curr.role_id
		WHERE curr.user_id = ${userId} AND cp.parent_id = #{pid} AND soft = 'menu'
		ORDER BY `level`
  </select>
</mapper>